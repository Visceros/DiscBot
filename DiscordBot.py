# coding: utf8

import discord
import asyncio   # check if installed / –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ –º–æ–¥—É–ª—å
import io
import aiohttp
import random
import asyncpg  # check if installed / –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ –º–æ–¥—É–ª—å
import os
from time import sleep
from discord.ext import commands
from chests_rewards import usual_reward, gold_reward
import logging

# ------- LOGGER FOR DEBUG PURPOSES
logger = logging.getLogger('discord')
logger.setLevel(logging.DEBUG)
handler = logging.FileHandler(filename='discord.log', encoding='utf-8', mode='w')
handler.setFormatter(logging.Formatter('%(asctime)s:%(levelname)s:%(name)s: %(message)s'))
logger.addHandler(handler)
# ------- LOGGER FOR DEBUG PURPOSES

token = 'NTAzNTQ5MDA1ODMwMDI5MzEy.Du8B4w.jXHBly_o8-E1EJDYsgYMOmxVAhs'
prefix = '>'
des = 'GoldenBot for discord.'
rgb_colors = ['ff0000', 'ff4800', 'ffaa00', 'ffe200', 'a5ff00', '51ff00', '00ff55', '00ffb6', '00fffc', '00bdff', '0055ff', '0600ff', '6700ff', '9f00ff', 'f200ff', 'ff0088', 'ff003b']
Client = discord.Client()
bot = commands.Bot(description=des, command_prefix=prefix)


async def start_rainbowise():
    async for guild in bot.fetch_guilds(limit=150):  # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å - –Ω—É–∂–Ω–æ –ª–∏ –≤–æ–æ–±—â–µ —ç—Ç–æ —É—Å–ª–æ–≤–∏–µ?
        if 'golden crown' in guild.name.lower():
            crown = bot.get_guild(guild.id)
    try:
        role = discord.utils.find(lambda r:('–†–ê–î–£–ñ–ù–´–ô –ù–ò–ö' in r.name.upper()), crown.roles)
    except Exception as e:
        print('no server "Golden Crown" in my server list')
        print(e.__traceback__)
    while not Client.is_closed():
        for clr in rgb_colors:
            clr = random.choice(rgb_colors)
            try:
                await role.edit(color=discord.Colour(int(clr, 16)))
                await asyncio.sleep(600)
            except Exception as e:
                channel = discord.utils.get(crown.channels, name='system')
                print(f'Sorry. Could not rainbowise the role. Check my permissions please, or that my role is higher than "{role}" role')
                await channel.send(f'Sorry. Could not rainbowise the role. Check my permissions please, or that my role is higher than "{role}" role')
                print(e.args, e.__cause__)
                break


@bot.event
async def on_ready():
    print('I\'m ready to do your biddings, Master')
    await start_rainbowise()


@bot.command(pass_context=True)
async def echo(ctx, *args):  # –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ = –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã, –≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ —ç—Ç–æ –±—É–¥–µ—Ç ">echo"
    """ prints your message like a bot said it """
    # —Ç—É—Ç –∫–∞–∫–∞—è-—Ç–æ –ø—Ä–æ–±–ª–µ–º–∞, —Ç–µ–ø–µ—Ä—å –≤–º–µ—Å—Ç–æ —Å–ª–æ–≤ –≤ "args" –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –æ–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. –ü—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–µ–Ω–∞?
    out = ''
    for word in ctx.message.content.split():
        out += word
        out += ' '
    await ctx.send(out)



# –†—É—á–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–∞–¥—É–∂–Ω–æ–≥–æ –Ω–∏–∫–∞
@bot.command(pass_context=True)
async def rainbowise(ctx):
    name = discord.utils.find(lambda r:('–†–ê–î–£–ñ–ù–´–ô –ù–ò–ö' in r.name.upper()), ctx.guild.roles)
    role = discord.utils.get(ctx.guild.roles, name=str(name))
    await ctx.send(f'starting rainbow for {role}')
    while not Client.is_closed():
        for clr in rgb_colors:
            clr = random.choice(rgb_colors)
            try:
                await role.edit(color=discord.Colour(int(clr, 16)))
                await asyncio.sleep(600)
            except Exception as e:
                await ctx.send(f'Sorry. Could not rainbowise the role. Check my permissions please, or that my role is higher than "{role}" role')
                print(e.args, e.__cause__)
                pass


# ------------- –ò–ì–†–ê –°–£–ù–î–£–ß–ö–ò -----------
@bot.command(pass_context=True)
async def chest(ctx):
    reactions = ['1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£']
    author = ctx.message.author
    channel = ctx.message.channel
    check_role = discord.utils.get(ctx.message.author.roles, name='–ê–î–ú–ò–ù')
    me = discord.utils.get(ctx.message.author.roles, name='–ö–õ–ê–ù–û–í–´–ô –ü–†–û–ì–†–ê–ú–ú–ò–°–¢')
    if '—Å—É–Ω–¥—É—á–∫–∏' in channel.name.lower() or '–∫–∞–∑–∏–Ω–æ' in channel.name.lower():
        pass
    else:
         return await ctx.send('```Error! –ò–∑–≤–∏–Ω–∏—Ç–µ, —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º –∫–∞–Ω–∞–ª–µ.```')
    isClanMate = False
    if [check_role in author.roles] or [me in author.roles]:
        isClanMate = True
    if not isClanMate:
        return await ctx.send(f'```Error! –ò–∑–≤–∏–Ω–∏—Ç–µ, –¥–æ—Å—Ç—É–ø –∏–º–µ—é—Ç —Ç–æ–ª—å–∫–æ —á–ª–µ–Ω—ã –∫–ª–∞–Ω–∞ —Å —Ä–æ–ª—å—é "{check_role}"```')
    else:
        # IF all correct we head further
        await ctx.send('```yaml\n–†–µ—à–∏–ª–∏ –∏—Å–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É –∏ –≤—ã–∏–≥—Ä–∞—Ç—å –≥–ª–∞–≤–Ω—ã–π –ø—Ä–∏–∑? –û—Ç–ª–∏—á–Ω–æ! \n' +
                                       '–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–æ–π –∏–∑ —à–µ—Å—Ç–∏ –ø—Ä–æ—Å—Ç—ã—Ö —Å—É–Ω–¥—É–∫–æ–≤ –æ—Ç–∫—Ä—ã–≤–∞–µ–º? –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ü–∏—Ñ—Ä—É –æ—Ç 1 –¥–æ 6```')
        # –ù–∞—á–∞–ª–æ –≤—Å—Ç–∞–≤–∫–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å –ø—Ä–æ—Å—Ç—ã–º–∏ —Å—É–Ω–¥—É–∫–∞–º–∏
        async with aiohttp.ClientSession() as session:
            async with session.get('https://cdn.discordapp.com/attachments/585041003967414272/647943159762124824/Untitled_-_6.png') as resp:
                if resp.status != 200 and 301:
                    return await channel.send('Error! Could not get the file...')
                data = io.BytesIO(await resp.read())
                start_message = await channel.send(file=discord.File(data, 'Normal-chests.png'))
                await session.close()
        # –ö–æ–Ω–µ—Ü –≤—Å—Ç–∞–≤–∫–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å –ø—Ä–æ—Å—Ç—ã–º–∏ —Å—É–Ω–¥—É–∫–∞–º–∏
        for react in reactions:
            await start_message.add_reaction(react)

        def checkS(reaction, user):
            return str(reaction.emoji) in reactions and user.bot is not True

        def checkG(reaction, user):
            return str(reaction.emoji) in reactions[0:2] and user.bot is not True

        try:
            reaction, user = await bot.wait_for('reaction_add', timeout=180, check=checkS)
        except asyncio.TimeoutError:
            await ctx.send('```yaml\n–£–¥–∞—á–∞ –Ω–µ —Ç–µ—Ä–ø–∏—Ç –º–µ–¥–ª–∏—Ç–µ–ª—å–Ω—ã—Ö. –í—Ä–µ–º—è –≤—ã—à–ª–æ! üëé```')
        else:
            reward, pic = usual_reward()
            await channel.send(f'```yaml\n–°—É–Ω–¥—É–∫ —Å–æ —Å–∫—Ä–∏–ø–æ–º –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –∏... {reward}```')
            async with aiohttp.ClientSession() as session:
                async with session.get(pic) as resp:
                        if resp.status != 200 and 301:
                            return await channel.send('Error! Could not get the file...')
                        data = io.BytesIO(await resp.read())
                        await channel.send(file=discord.File(data, 'reward.png'))
            if '–∑–æ–ª–æ—Ç–æ–π –∫–ª—é—á' in reward.lower():
                await ctx.send('```fix\n–û–ì–û! –î–∞ —É –Ω–∞—Å —Å—á–∞—Å—Ç–ª–∏–≤—á–∏–∫! –ü—Ä–∏–Ω–∏–º–∞–π—Ç–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –∑–æ–ª–æ—Ç–æ–π —Å—É–Ω–¥—É–∫!```')
                # –ù–∞—á–∞–ª–æ –≤—Å—Ç–∞–≤–∫–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å –∑–æ–ª–æ—Ç—ã–º–∏ —Å—É–Ω–¥—É–∫–∞–º–∏
                async with aiohttp.ClientSession() as session:
                    async with session.get(
                            'https://cdn.discordapp.com/attachments/585041003967414272/647935813962694676/51d6848c09aba40c.png') as resp:
                        if resp.status != 200 and 301:
                            return await channel.send('Error! Could not get the file...')
                        data = io.BytesIO(await resp.read())
                        start_message = await channel.send(file=discord.File(data, 'Golden-chests.png'))
                        await session.close()
                # –ö–æ–Ω–µ—Ü –≤—Å—Ç–∞–≤–∫–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å –∑–æ–ª–æ—Ç—ã–º–∏ —Å—É–Ω–¥—É–∫–∞–º–∏
                for react in reactions[0:3]:
                    await start_message.add_reaction(react)
                try:
                    reaction, user = await bot.wait_for('reaction_add', timeout=180, check=checkG)
                except asyncio.TimeoutError:
                    return await ctx.send('```fix\n–£–¥–∞—á–∞ –Ω–µ —Ç–µ—Ä–ø–∏—Ç –º–µ–¥–ª–∏—Ç–µ–ª—å–Ω—ã—Ö. –í—Ä–µ–º—è –≤—ã—à–ª–æ! üëé```')
                else:
                    reward, pic = gold_reward()
                    await channel.send('```fix\n–í—ã –ø—Ä–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç–µ –ó–æ–ª–æ—Ç–æ–π –∫–ª—é—á –≤ –∑–∞–º–æ—á–Ω–æ–π —Å–∫–≤–∞–∂–∏–Ω–µ ' +
                                       f'–∏ –∫—Ä—ã—à–∫–∞ —Ç–∏—Ö–æ–Ω—å–∫–æ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è...\n{reward}```')
                    async with aiohttp.ClientSession() as session:
                        async with session.get(pic) as resp:
                            if resp.status != 200 and 301:
                                return await channel.send('Error! Could not get the file...')
                            data = io.BytesIO(await resp.read())
                            await channel.send(file=discord.File(data, 'gold-reward.png'))
# ------------- –ö–û–ù–ï–¶ –ò–ì–†–´ –°–£–ù–î–£–ß–ö–ò -----------


# ------------- –ò–ì–†–ê –ë–ò–ù–ì–û -----------
@bot.command(pass_context=True)
async def bingo(ctx):
    bingo_numbers = ['üü¶1Ô∏è‚É£', 'üü¶2Ô∏è‚É£', 'üü¶3Ô∏è‚É£', 'üü¶4Ô∏è‚É£', 'üü¶5Ô∏è‚É£', 'üü¶6Ô∏è‚É£', 'üü¶7Ô∏è‚É£', 'üü¶8Ô∏è‚É£', 'üü¶9Ô∏è‚É£', '1Ô∏è‚É£0Ô∏è‚É£', '1Ô∏è‚É£1Ô∏è‚É£', '1Ô∏è‚É£2Ô∏è‚É£',
                     '1Ô∏è‚É£3Ô∏è‚É£', '1Ô∏è‚É£4Ô∏è‚É£', '1Ô∏è‚É£5Ô∏è‚É£', '1Ô∏è‚É£6Ô∏è‚É£', '1Ô∏è‚É£7Ô∏è‚É£', '1Ô∏è‚É£8Ô∏è‚É£', '1Ô∏è‚É£9Ô∏è‚É£', '2Ô∏è‚É£0Ô∏è‚É£', '2Ô∏è‚É£1Ô∏è‚É£',
                     '2Ô∏è‚É£2Ô∏è‚É£', '2Ô∏è‚É£3Ô∏è‚É£', '2Ô∏è‚É£4Ô∏è‚É£', '2Ô∏è‚É£5Ô∏è‚É£', '2Ô∏è‚É£6Ô∏è‚É£']
    for i in range(3):
        ctx.send(random.choice(bingo_numbers))
# ------------- –ö–û–ù–ï–¶ –ò–ì–†–´ –ë–ò–ù–ì–û -----------


@bot.command(pass_context=True)
async def casino(ctx):
    prize = 0

    def makenums():
        nums = ""
        for _ in range(3):
            nums += str(random.randint(0,9))
        return nums

    ed_msg = await ctx.send(makenums())
    # rules ---> ctx.send('```fix\n –∫–∞–∫–æ–≤—ã –ø—Ä–∞–≤–∏–ª–∞? ```')
    for i in range(3,6):
        ed = makenums()
        await ed_msg.edit(content=ed, suppress=False)
        sleep(0.4)
    await ctx.send('fin')


bot.run(token)
